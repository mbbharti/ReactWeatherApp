{"version":3,"sources":["WeatherApp.jsx","App.js","reportWebVitals.js","index.js"],"names":["WeatherApp","useState","name","setName","search","setSearch","useEffect","a","apiUrl","fetch","response","json","resJson","main","fetchApi","className","type","onChange","e","target","value","temp","temp_max","temp_min","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAyDeA,MAtDf,WAAuB,IAAD,EAEEC,mBAAS,MAFX,mBAEZC,EAFY,KAEPC,EAFO,OAGMF,mBAAS,UAHf,mBAGZG,EAHY,KAGLC,EAHK,KAkBlB,OAXAC,qBAAU,YACQ,uCAAE,gCAAAC,EAAA,6DACNC,EADM,2DACqDJ,EADrD,+BAHP,oCAGO,SAEWK,MAAMD,GAFjB,cAENE,EAFM,gBAGUA,EAASC,OAHnB,OAGNC,EAHM,OAKZT,EAAQS,EAAQC,MALJ,2CAAF,qDAOdC,KACF,CAACV,IAGC,qCACI,oBAAIW,UAAU,UAAd,yBACA,qBAAKA,UAAU,UAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,WAAf,SACI,uBAAOC,KAAK,SAASC,SAAU,SAACC,GAAKb,EAAUa,EAAEC,OAAOC,YAGvDlB,EAML,sBAAKa,UAAU,aAAf,UACI,sBAAKA,UAAU,WAAf,UACI,sBAAMA,UAAU,YAAhB,SAA4B,mBAAGA,UAAU,4BACzC,6BAAKX,OAET,qBAAKW,UAAU,OAAf,SACI,+BAAKb,EAAKmB,KAAV,aAEJ,qBAAKN,UAAU,SAAf,SACI,qCAAQb,EAAKoB,SAAb,eAAgCpB,EAAKqB,SAArC,gBAdA,sBAAKR,UAAU,cAAf,UACI,+CACA,yECrBjBS,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e3c1ce8a.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\n// http://api.openweathermap.org/data/2.5/weather?q=delhi&appid=d44b81bcfee4e3e434c0b6c0d69443dc\r\nfunction WeatherApp() {\r\n\r\n    const[name,setName]=useState(null);\r\n    const[search,setSearch]=useState('mumbai');\r\n\r\n    const apiKey=\"d44b81bcfee4e3e434c0b6c0d69443dc\";\r\n    \r\n    useEffect(()=>{\r\n        const fetchApi= async ()=>{\r\n            const apiUrl=`http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=${apiKey}`;\r\n            const response = await fetch(apiUrl);\r\n            const resJson = await response.json();\r\n            // console.log(resJson);\r\n            setName(resJson.main);\r\n        }\r\n        fetchApi();\r\n    },[search]);\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"heading\">Weather App</h1>\r\n            <div className=\"mainDiv\">\r\n                <div className=\"allContent\">\r\n                    <div className=\"inputDiv\">\r\n                        <input type=\"search\" onChange={(e)=>{setSearch(e.target.value)}} />\r\n                    </div>\r\n                    {\r\n                        !name ? (\r\n                            <div className=\"noDataFound\">\r\n                                <h1>No data Found</h1>\r\n                                <p>please enter valid city name</p>\r\n                            </div>\r\n                        ):(\r\n                    <div className=\"contentDiv\">\r\n                        <div className=\"cityName\">\r\n                            <span className=\"cloudIcon\"><i className=\"fas fa-cloud-sun-rain\"></i></span>\r\n                            <h1>{search}</h1>\r\n                        </div>\r\n                        <div className=\"temp\">\r\n                            <h2>{name.temp}°c</h2>\r\n                        </div>\r\n                        <div className=\"minMax\">\r\n                            <p>Min-{name.temp_max}°c | Max-{name.temp_min}°c</p>\r\n                        </div>\r\n\r\n                    </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default WeatherApp;","import React from 'react';\nimport './App.css';\nimport WeatherApp from './WeatherApp';\n\nfunction App() {\n  return (\n    <>\n      <WeatherApp />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}